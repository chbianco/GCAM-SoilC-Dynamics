library(tidyr)
library(metafor)
library(dplyr)
library(ggplot2)
#Load GCAM data
soilC <- read.csv(file = 'Data/GCAM_soilC.csv')
timescales <- read.csv(file = 'Data/soil_timescales.csv')
glus <- read.csv(file = 'Data/GLU_codes.csv')
regions <- read.csv('Data/GCAM_regions.csv')
#Load experimental data
PostKwon <- read.csv(file= 'Data/Experimental Data.csv', na.strings = c("", "NA"))
Wei <- read.csv(file= 'Data/Wei et al Data.csv', na.strings = c("", "NA"))
#Join GLU codes with soilC data
soilC %>%
mutate(GLU_code = GLU) %>%
right_join(glus, by='GLU_code') %>%
right_join(regions, by='GCAM_region_ID') %>%
right_join(timescales, by='GCAM_region_ID')-> soilC_regions
#Simplify the data to just the stuff we'll need to compare with experimental data
soilC_regions %>%
select(Land_Type, soil_c, GLU_code, soilTimeScale, GCAM_region_ID, Basin_long_name) -> simple_soilC_regions
#Creating the Post & Kwon comparison data
PostKwon %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, Time, Exp_Rate) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(initial_soil_c = soil_c) %>%
select(-Land_Type) %>%
mutate(Land_Type = Final_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(final_soil_c = soil_c) %>%
select(-Land_Type, -soilTimeScale.x, -Basin_long_name.x) %>%
rename(soilTimeScale = soilTimeScale.y, Basin_long_name = Basin_long_name.y) %>%
na.omit() %>%
mutate(GCAM_Rate = (final_soil_c - initial_soil_c)/soilTimeScale, Rate_Difference = Exp_Rate - GCAM_Rate,
Exp_k = -log(abs(Exp_Rate)*Time +1)/Time,
GCAM_k = -log(final_soil_c/initial_soil_c)/soilTimeScale,
source = 'Post & Kwon'
) %>%
#This next line corrects the sign of Exp_k--we had to take the absolute value to avoid NaNs, so this accounts for that
mutate(Exp_k = ifelse(sign(Exp_k) == sign(Exp_Rate), Exp_k*(-1), Exp_k)) -> PostKwon_Comparison
#Creating the Wei et al comparison data
Wei %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, OC_decrease, Time) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(initial_soil_c = soil_c) %>%
select(-Land_Type) %>%
mutate(Land_Type = Final_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(final_soil_c = soil_c) %>%
select(-Land_Type, -soilTimeScale.x, -Basin_long_name.x) %>%
rename(soilTimeScale = soilTimeScale.y, Basin_long_name = Basin_long_name.y) %>%
na.omit() %>%
mutate(GCAM_Rate = (final_soil_c - initial_soil_c)/soilTimeScale,
GCAM_k = -log(final_soil_c/initial_soil_c)/soilTimeScale,
Exp_k = -log(1/((abs(OC_decrease)/100) +1))/Time,
source = 'Wei et al'
) %>%
#This next line corrects the sign of Exp_k--we had to take the absolute value to avoid NaNs, so this accounts for that
mutate(Exp_k = ifelse(sign(Exp_k) == sign(OC_decrease), Exp_k, Exp_k*(-1))) -> Wei_Comparison
#Merging the two papers...
#Now, we bind the two rows together. Because the Wei et al data doesn't have any raw rates, we won't include that data from Post & Kwon either
Full_Comparison <- bind_rows(
select(PostKwon_Comparison, -Exp_Rate, -Rate_Difference),
select(Wei_Comparison, -OC_decrease)
)
#EVERYTHING ABOVE THIS LITERALLY JUST LOADS DATA!!!! DON'T CHANGE IT!!!!!
#IF YOU WANT TWO TYPES, USE THIS
Full_Comparison %>%
pivot_longer(cols = Exp_k:GCAM_k,
names_to = "Type",
values_to = "k") -> full_long_data
#Let's add transition type
full_long_data %>%
mutate(change = paste(Initial_Land_Use, Final_Land_Use, sep = '')) -> change_long_data
shapiro.test(change_long_data$k)
View(change_long_data)
GCAM_k = filter(change_long_data, Type == 'Exp_k')
View(GCAM_k)
View(Full_Comparison)
vars = var.test(k ~ Type, data = change_long_data)
View(vars)
vars
aov_Full <- oneway.test(k ~ Type + Basin_long_name ,
data = full_long_data, var.equal = FALSE)
ov_Full <- oneway.test(k ~ Type + Basin_long_name ,
data = full_long_data, var.equal = FALSE)
#Type * Basin (no average)
aov_Full_type_by_basin <- aov(k ~ Type * Basin_long_name,
data = change_long_data)
summary(aov_Full_type_by_basin)
aov_Full_type_by_basin_by_change <- aov(k ~ Type * Basin_long_name * change,
data = change_long_data)
summary(aov_Full_type_by_basin_by_change)
AIC(aov_Full_type_by_basin)
AIC(aov_Full_type_by_basin_by_change)
TukeyHSD(aov_Full_type_by_basin_by_change)
aov_Full_change <- aov(k ~ Type + change,
data = change_long_data)
AIC(aov_Full_change)
AIC(aov_Full_type_by_basin_by_change)
summary(aov_Full_type_by_basin_by_change)
summary(aov_Full_change)
vars
source("~/Desktop/GCAM-SoilC-Dynamics/anova.R")
Full_Comparison %>%
mutate(change = paste(Initial_Land_Use, Final_Land_Use, sep = ' to ')) %>%
mutate(difference = Exp_k - GCAM_k) %>%
group_by(change) %>%
summarise(Mean_k = mean(difference), std_dev = sd(difference), Sample_Size = n()) -> mean_difference
ggplot(mean_difference, aes(x = Mean_k, y = change)) +
geom_point(aes(size = Sample_Size), shape = 15) +
labs(x = 'Difference in Mean k Value', y = 'Transition Type') +
geom_errorbar(aes(xmin=Mean_k - std_dev, xmax=Mean_k + std_dev), width=.2,
position=position_dodge(0.05)) +
xlim(-0.1, 0.1) +
geom_vline(xintercept = 0, linetype = 'dashed', color = 'blue') +
theme_light()
Full_Comparison %>%
mutate(change = paste(Initial_Land_Use, Final_Land_Use, sep = ' to ')) %>%
mutate(difference = Exp_k - GCAM_k) %>%
group_by(change) %>%
summarise(Mean_k = mean(difference), std_dev = sd(difference), Sample_Size = n()) -> mean_difference
ggplot(mean_difference, aes(x = Mean_k, y = change)) +
geom_point(aes(size = Sample_Size), shape = 15) +
labs(x = 'Difference in Mean k Value', y = 'Transition Type') +
geom_errorbar(aes(xmin=Mean_k - std_dev, xmax=Mean_k + std_dev), width=.2,
position=position_dodge(0.05)) +
xlim(-0.1, 0.1) +
geom_vline(xintercept = 0, linetype = 'dashed', color = 'blue') +
theme_light()
ggsave('Fake_forest.jpeg', path = 'Graphs')
source("~/Desktop/GCAM-SoilC-Dynamics/anova.R")
#Filter out zeros
all_transitions %>%
filter(sqkm_change != 0) -> filtered_transitions
library(ggplot2)
source("~/Desktop/GCAM-SoilC-Dynamics/Track_Transitions.R")
source("~/Desktop/GCAM-SoilC-Dynamics/anova.R")
#Create a function to map the detailed land uses to their simple counterparts
simple_land <- function(land){
if(grepl('forest', land)){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('unmanaged', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('OtherArableLand')}
else{return(NA)}
}
#Apply the function to the dataset
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
sapply(filtered_transitions$from, simple_land) -> from_Land_Use
#Replace the to and from columns with the simplified version
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(from, to, sep = ' to ')) -> transitions
#Sum total land use transitions and filter for ones that are meaningfully high
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions
#Sort and sum land use transition by GCAM32 region
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((region_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions_gcam32
#Sort and sum land use transition by basin
transitions %>%
group_by(metric_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((metric_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions_glu
#Plotting
#Plot by GCAM32 region
ggplot(data = total_transitions_gcam32, aes(x=total_skqm_change, y=change)) +
geom_bar(stat='identity') +
facet_wrap(~region_id)
#Plot in total
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
View(filtered_transitions)
View(filtered_transitions)
#Create a function to map the detailed land uses to their simple counterparts
simple_land <- function(land){
if(grepl('forest', land)){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('biomass', land)){return('Biomass')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('OtherArableLand')}
else{return(NA)}
}
#Apply the function to the dataset
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
sapply(filtered_transitions$from, simple_land) -> from_Land_Use
#Replace the to and from columns with the simplified version
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(from, to, sep = ' to ')) -> transitions
#Sum total land use transitions and filter for ones that are meaningfully high
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions
#Sort and sum land use transition by GCAM32 region
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((region_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions_gcam32
#Sort and sum land use transition by basin
transitions %>%
group_by(metric_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((metric_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions_glu
#Plotting
#Plot by GCAM32 region
ggplot(data = total_transitions_gcam32, aes(x=total_skqm_change, y=change)) +
geom_bar(stat='identity') +
facet_wrap(~region_id)
#Plot in total
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
View(transitions)
#Plot in total
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('total_transitions_bar.jpeg', path = 'Graphs')
#Now, we do this for only after to see what is more common in the future
transitions_soon <- filter(transitions, year > 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 10000)-> total_transitions_soon
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('post_2015_transitions_bar.jpeg', path = 'Graphs')
#Now, we do this for only BEFORE  2015 to see what is more common in the past
transitions_soon <- filter(transitions, year < 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions_soon
#Plot in total for only transitions in the past
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('pre_2015_transitions_bar.jpeg', path = 'Graphs')
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('post_2015_transitions_bar.jpeg', path = 'Graphs')
#Now, we do this for only BEFORE  2015 to see what is more common in the past
transitions_soon <- filter(transitions, year < 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions_soon
#Plot in total for only transitions in the past
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('pre_2015_transitions_bar.jpeg', path = 'Graphs')
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 10000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('post_2015_transitions_bar.jpeg', path = 'Graphs')
#Now, we do this for only BEFORE  2015 to see what is more common in the past
transitions_soon <- filter(transitions, year < 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions_soon
#Plot in total for only transitions in the past
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('pre_2015_transitions_bar.jpeg', path = 'Graphs')
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 100000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 1000000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 300000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 200000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 150000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 140000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
#Now, we do this for only after to see what is more common in the future
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 120000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
#Now, we do this for only after to see what is more common in the future
transitions_future <- filter(transitions, year > 2015)
transitions_future %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 120000)-> total_transitions_future
#Plot in total for only transitions after 2015
ggplot(data = total_transitions_future, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('post_2015_transitions_bar.jpeg', path = 'Graphs')
#Now, we do this for only BEFORE  2015 to see what is more common in the past
transitions_soon <- filter(transitions, year < 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change)) %>%
filter(total_skqm_change > 500000)-> total_transitions_soon
#Plot in total for only transitions in the past
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('pre_2015_transitions_bar.jpeg', path = 'Graphs')
