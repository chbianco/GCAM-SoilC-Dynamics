geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.15, .35) + ylim(-.15, .35)  +
labs(title = 'SOC rate comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
#Plot overlapping k histograms for the different k sources
ggplot() +
geom_histogram(aes(x = Rate_Comparison$Exp_k,fill ='Experimental k'), alpha = 0.5) +
geom_histogram(aes(x = Rate_Comparison$GCAM_k,  fill = 'GCAM k'), alpha = 0.5) +
xlab('k (y^-1)') + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Experimental k' = '#45912c', 'GCAM k'='#e3962b')) +
theme_light() +
labs(title = 'SOC k value comparison during land use transition')
#T test
t.test(Rate_Comparison$Exp_k, Rate_Comparison$GCAM_k, alternative = 'two.sided') ->k_T_test
#According to this, there is a meaningful difference in the means
k_T_test
source("~/.active-rstudio-document")
rm(list = ls())
rlang::last_trace()
source("~/.active-rstudio-document")
rm(list = ls())
library(dplyr)
library(ggplot2)
soilC <- read.csv(file = 'GCAM_soilC.csv')
timescales <- read.csv(file = 'soil_timescales.csv')
glus <- read.csv(file = 'GLU_codes.csv')
regions <- read.csv('GCAM_regions.csv')
PostKwon <- read.csv(file= 'Experimental Data.csv', na.strings = c("", "NA"))
Wei <- read.csv(file= 'Wei et al Data.csv', na.strings = c("", "NA"))
soilC %>%
mutate(GLU_code = GLU) %>%
right_join(glus, by='GLU_code') %>%
right_join(regions, by='GCAM_region_ID') %>%
right_join(timescales, by='GCAM_region_ID')-> soilC_regions
soilC_regions %>%
select(Land_Type, soil_c, GLU_code, soilTimeScale, GCAM_region_ID) -> simple_soilC_regions
PostKwon %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, Time, Exp_Rate) %>%
na.omit()
PostKwon %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, Time, Exp_Rate) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use)
PostKwon %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, Time, Exp_Rate) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use) %>%
right_join( select(simple_soilC_regions), by = c('GLU_code', 'Land_Type', 'GCAM_region_ID'))
PostKwon %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, Time, Exp_Rate) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(initial_soil_c = soil_c) %>%
select(-Land_Type) %>%
mutate(Land_Type = Final_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(final_soil_c = soil_c) %>%
select(-Land_Type, -soilTimeScale.x) %>%
rename(soilTimeScale = soilTimeScale.y) %>%
na.omit() %>%
mutate(GCAM_Rate = (final_soil_c - initial_soil_c)/soilTimeScale, Rate_Difference = Exp_Rate - GCAM_Rate,
Exp_k = -log(abs(Exp_Rate)*Time +1)/Time,
GCAM_k = -log(final_soil_c/initial_soil_c)/Time,
source = 'Post & Kwon'
) %>%
#This next line corrects the sign of Exp_k--we had to take the absolute value to avoid NaNs, so this accounts for that
mutate(Exp_k = ifelse(sign(Exp_k) == sign(Exp_Rate), Exp_k*(-1), Exp_k)) -> PostKwon_Comparison
rm(list = ls())
source("~/.active-rstudio-document")
View(PostKwon_Comparison)
View(Wei_Comparison)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
Full_Comparison <- bind_rows(
select(PostKwon_Comparison, -Exp_rate, -Rate_Difference),
select(Wei_Comparison, -OC_decrease)
)
Full_Comparison <- bind_rows(
select(PostKwon_Comparison, -Exp_Rate, -Rate_Difference),
select(Wei_Comparison, -OC_decrease)
)
View(Full_Comparison)
View(Full_Comparison)
ggplot(data = Full_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 3) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.1, .1) + ylim(-.1, .1)  +
labs(title = 'SOC k comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
ggplot(data = Full_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 3) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
labs(title = 'SOC k comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
ggplot(data = Full_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 3) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.1, .4) + ylim(-.1, .4)  +
labs(title = 'SOC k comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
ggplot(data = Full_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 2) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.1, .4) + ylim(-.1, .4)  +
labs(title = 'SOC k comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
ggplot() +
geom_histogram(aes(x = Full_Comparison$Exp_k,fill ='Experimental k'), alpha = 0.5) +
geom_histogram(aes(x = Full_Comparison$GCAM_k,  fill = 'GCAM k'), alpha = 0.5) +
xlab('k (y^-1)') + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Experimental k' = '#45912c', 'GCAM k'='#e3962b')) +
theme_light() +
labs(title = 'SOC k value comparison during land use transition')
View(Wei_Comparison)
t.test(Full_Comparison$Exp_k, Full_Comparison$GCAM_k, alternative = 'two.sided') ->Full_T_test
Full_T_test
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
ggplot(data = Full_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 2) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.1, .4) + ylim(-.1, .4)  +
labs(title = 'SOC k comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
#Matching experimental data to GCAM data
Wei %>%
select(Initial_Land_Use, Final_Land_Use, GLU_code, GCAM_region_ID, OC_decrease, Time) %>%
na.omit() %>%
mutate(Land_Type = Initial_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(initial_soil_c = soil_c) %>%
select(-Land_Type) %>%
mutate(Land_Type = Final_Land_Use) %>%
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(final_soil_c = soil_c) %>%
select(-Land_Type, -soilTimeScale.x) %>%
rename(soilTimeScale = soilTimeScale.y) %>%
na.omit() %>%
mutate(GCAM_Rate = (final_soil_c - initial_soil_c)/soilTimeScale,
GCAM_k = -log(final_soil_c/initial_soil_c)/Time,
Exp_k = -log(1/((abs(OC_decrease)/100) +1))/Time,
) %>%
#This next line corrects the sign of Exp_k--we had to take the absolute value to avoid NaNs, so this accounts for that
mutate(Exp_k = ifelse(sign(Exp_k) == sign(OC_decrease), Exp_k, Exp_k*(-1))) -> Rate_Comparison
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Wei_Analysis.R")
ggplot(data = Rate_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 2) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.15, .35) + ylim(-.15, .35)  +
labs(title = 'SOC rate comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
ggplot() +
geom_histogram(aes(x = Rate_Comparison$Exp_k,fill ='Experimental k'), alpha = 0.5) +
geom_histogram(aes(x = Rate_Comparison$GCAM_k,  fill = 'GCAM k'), alpha = 0.5) +
xlab('k (y^-1)') + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Experimental k' = '#45912c', 'GCAM k'='#e3962b')) +
theme_light() +
labs(title = 'SOC k value comparison during land use transition')
soilC <- read.csv(file = 'Data\GCAM_soilC.csv')
soilC <- read.csv(file = 'Data/GCAM_soilC.csv')
all_transitions = read.csv(file = 'Data/transitions_combined_GCAM')
all_transitions = read.csv(file = 'Data/transitions_combined_GCAM')
all_transitions <- read.csv(file = 'Data/transitions_combined_GCAM')
some_gcamSoilC <- read.csv(file = "C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/L2252.LN5_MgdCarbon_crop.csv")
some_gcamSoilC <- read.csv(file = "C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/L2252.LN5_MgdCarbon_crop.csv")
all_transitions = read.csv(file = 'Data/transitions_combined_GCAM')
soilC <- read.csv(file = 'Data/GCAM_soilC.csv')
all_transitions = read.csv(file = 'Data/transitions_combined_GCAM.csv')
all_transitions <- read.csv(file = 'Data/transitions_combined_GCAM.csv')
all_transitions
all_transitions %>%
filter(sqkm_change != 0)
library(dplyr)
all_transitions %>%
filter(sqkm_change != 0)
View(all_transitions)
all_transitions %>%
filter(sqkm_change != 0) <- filtered_transitions
all_transitions %>%
filter(sqkm_change != 0) -> filtered_transitions
unique(filtered_transitions$from)
soilC <- read.csv(file = 'Data/GCAM_soilC.csv')
View(soilC)
View(soilC)
unique(soilC$Land_Type)
mutate(filtered_transitions, 'from', simple_land)
simple_land <- function(land){
if(grepl(land, 'forest')){'Forest'}
else if(grepl(land, 'grassland')){'Grassland'}
else if(grepl(land, 'rockicedesert')){'RockIceDesert'}
else if(grepl(land, 'shrub')){'Shrubland'}
else if(grepl(land, 'tundra')){'Tundra'}
else if(grepl(land, 'pasture')){'Pasture'}
else if(grepl(land, 'urban')){'Urbanland'}
else if(grepl(land, 'irrigated') | grepl(land, 'rainfed')){'Cropland'}
else{NA}
}
mutate(filtered_transitions, 'from', simple_land)
simple_land <- function(land){
sapply(land, function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl(land, 'grassland')){return('Grassland')}
else if(grepl(land, 'rockicedesert')){return('RockIceDesert')}
else if(grepl(land, 'shrub')){return('Shrubland')}
else if(grepl(land, 'tundra')){return('Tundra')}
else if(grepl(land, 'pasture')){return('Pasture')}
else if(grepl(land, 'urban')){return('Urbanland')}
else if(grepl(land, 'irrigated') | grepl(land, 'rainfed')){return('Cropland')}
else{NA}
}
)
}
mutate(filtered_transitions, 'from', simple_land)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Track_Transitions.R")
sapply(filtered_transitions$to, simple_land)
View(filtered_transitions)
View(filtered_transitions)
class(filtered_transitions$to[1])
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl(land, 'grassland')){return('Grassland')}
else if(grepl(land, 'rockicedesert')){return('RockIceDesert')}
else if(grepl(land, 'shrub')){return('Shrubland')}
else if(grepl(land, 'tundra')){return('Tundra')}
else if(grepl(land, 'pasture')){return('Pasture')}
else if(grepl(land, 'urban')){return('Urbanland')}
else if(grepl(land, 'irrigated') | grepl(land, 'rainfed')){return('Cropland')}
else if(grepl(land, 'otherarableland') ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land)
View(filtered_transitions)
View(filtered_transitions)
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl(land, 'grassland')){return('Grassland')}
else if(grepl(land, 'rockicedesert')){return('RockIceDesert')}
else if(grepl(land, 'shrub', fixed = FALSE)){return('Shrubland')}
else if(grepl(land, 'tundra')){return('Tundra')}
else if(grepl(land, 'pasture')){return('Pasture')}
else if(grepl(land, 'urban')){return('Urbanland')}
else if(grepl(land, 'irrigated') | grepl(land, 'rainfed')){return('Cropland')}
else if(grepl(land, 'otherarableland') ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land)
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl(land, 'grassland')){return('Grassland')}
else if(grepl(land, 'rockicedesert')){return('RockIceDesert')}
else if(grepl(land, 'shrub', fixed = TRUE)){return('Shrubland')}
else if(grepl(land, 'tundra')){return('Tundra')}
else if(grepl(land, 'pasture')){return('Pasture')}
else if(grepl(land, 'urban')){return('Urbanland')}
else if(grepl(land, 'irrigated') | grepl(land, 'rainfed')){return('Cropland')}
else if(grepl(land, 'otherarableland') ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land)
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl(land, 'rainfed')){return('Cropland')}
else if(grepl('otherarableland', land) ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land)
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land)
simple_land <- function(land){
if(grepl(land, 'forest')){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
dim(to_Land_Use)
class(to_Land_Use)
filtered_transitions <- mutate(filtered_transitions, to = to_Land_Use)
filtered_transitions
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
simple_land <- function(land){
if(grepl('forest', land)){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
sapply(filtered_transitions$from, simple_land) -> from_Land_Use
mutate(filtered_transitions, to = to_Land_Use) %>%
mutate(from = from_Land_Use)
to_Land_Use
library(dplyr)
#Load the transition data into R
all_transitions <- read.csv(file = 'Data/transitions_combined_GCAM.csv')
all_transitions %>%
filter(sqkm_change != 0) -> filtered_transitions
simple_land <- function(land){
if(grepl('forest', land)){return('Forest')}
else if(grepl('grassland', land)){return('Grassland')}
else if(grepl('rockicedesert', land)){return('RockIceDesert')}
else if(grepl('shrub', land)){return('Shrubland')}
else if(grepl('tundra',land)){return('Tundra')}
else if(grepl('pasture', land)){return('Pasture')}
else if(grepl('urban', land)){return('Urbanland')}
else if(grepl('irrigated', land) | grepl('rainfed', land)){return('Cropland')}
else if(grepl('otherarableland', land) ){return('Cropland')}
else{return(NA)}
}
sapply(filtered_transitions$to, simple_land) -> to_Land_Use
sapply(filtered_transitions$from, simple_land) -> from_Land_Use
mutate(filtered_transitions, to = to_Land_Use) %>%
mutate(from = from_Land_Use)
mutate(filtered_transitions, to = to_Land_Use) %>%
mutate(from = from_Land_Use)  -> transitions
transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = c(to, from)) -> transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = c(to_Land_Use, from_Land_Use)) -> transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(to, from)) -> transitions
transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(to, from, sep = '')) -> transitions
transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(to, from, sep = '')) %>%
group_by(change) %>%
summarize(sqkm_change, sum)-> transitions
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(to, from, sep = '')) %>%
group_by(change) %>%
summarize(sum(sqkm_change))-> transitions
transitions
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(`sum(sqkm_change)`)
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange('sum(sqkm_change)')
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change))
transitions %>%
group_by(change)
filtered_transitions %>%
mutate(to = to_Land_Use) %>%
mutate(from = from_Land_Use) %>%
mutate(change = paste(to, from, sep = '')) -> transitions
transitions %>%
group_by(change)
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change))
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(`sum(sqkm_change)`)
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(desc(`sum(sqkm_change)`))
transitions
unique(transitions$metric_id)
unique(transitions$sce)
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(desc(`sum(sqkm_change)`))
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(desc(`sum(sqkm_change)`)) %>%
rename(total_skqm_change) -> total_transitions
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange(desc(`sum(sqkm_change)`)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
total_transitions
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Old r exercises/Initial_SoilC_Graphs.R")
ggplot(data = total_transitions, aes(x=change, y=total_skqm_change)) +
geom_bar(stat='identity')
View(transitions)
transitions %>%
group_by(region_id, change)
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change))
ggplot(data = total_transitions, aes(x=change, y=total_skqm_change)) +
geom_bar(stat='identity') +
facet_wrap(~region_id)
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange(desc(`sum(sqkm_change)`)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
total_transitions
transitions %>%
group_by(region_id, change) %>%
summarize((region_id)) %>%
arrange(asc(`sum(sqkm_change)`)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((`sum(sqkm_change)`)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
total_transitions
View(transitions)
transitions %>%
group_by(region_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((region_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
View(transitions)
total_transitions
ggplot(data = total_transitions, aes(x=change, y=total_skqm_change)) +
geom_bar(stat='identity') +
facet_wrap(~region_id)
transitions %>%
group_by(metric_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((region_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`)
transitions %>%
group_by(metric_id, change) %>%
summarize(sum(sqkm_change)) %>%
arrange((metric_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions_glu
total_transitions_glu
ggplot(data = transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity')
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
arrange((region_id)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) -> total_transitions
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(region_id))-> total_transitions
transitions %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change))-> total_transitions
total_transitions
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity')
