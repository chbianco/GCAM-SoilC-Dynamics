theme_light()
k_T_test
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
Full_T_test
k_T_test
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Wei_Analysis.R")
k_T_test
#Plot the two k vals against each other with a 1:1 line as well
ggplot(data = Rate_Comparison, aes(x = Exp_k, y = GCAM_k)) +
geom_point(aes(shape = Final_Land_Use, color = Initial_Land_Use), size = 2) +
scale_shape_manual(values = c(4, 8, 16, 17)) +
scale_shape(solid = TRUE) +
geom_abline() +
xlab('Experimental k (1/y)') + ylab('GCAM Derived k (1/y)') +
theme_light() +
xlim(-.15, .35) + ylim(-.15, .35)  +
labs(title = 'SOC rate comparison during land use transition', color =  'Initial Land Use', shape = 'Final Land Use')
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
PostKwon_fixed_effect_results
PostKwon_k_fixed_effect_results
Wei_fixed_effect_results
Full_fixed_effect_results
Full_fixed_effect_results_change
#Forest plot for full dataset
forest(
Full_effect_sizes$yi, Full_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Transition Type', 'Weight            SMD [95% CI]'),
slab = Full_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
knitr::opts_chunk$set(echo = TRUE)
```{r Read-In-GCAM-Data, message=FALSE}
library(dplyr)
library(ggplot2)
library(metafor)
#GCAM's SOC data
soilC <- read.csv(file = 'Data/GCAM_soilC.csv')
#GCAM's soil timescale list
read.csv(file = 'Data/soil_timescales.csv') %>%
mutate(GCAM_region_ID = seq(1,32,by=1))-> timescales
#GCAM's land use region list
# answered below [what does GLU stand for?????]
#Geographic Land Unit
#https://gcims.pnnl.gov/modeling/moirai-land-data-amalgamation-gcams-aglu-module
glus <- read.csv(file = 'Data/GLU_codes.csv')
#GCAM's geopolitical region list
regions <- read.csv('Data/GCAM_regions.csv')
#Merging the four above data sets
#flagging
#issue here for me -> "GCAM_region_ID" does not exist in original file versions
soilC %>%
mutate(GLU_code = GLU) %>%
right_join(glus, by='GLU_code') %>%
right_join(regions, by='GCAM_region_ID') %>%
right_join(timescales, by='GCAM_region_ID')-> soilC_regions
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Wei_Analysis.R")
k_T_test
ggplot() +
geom_histogram(aes(x = Wei_Comparison$Exp_k,fill ='Wei et al'), alpha = 0.5) +
geom_histogram(aes(x = Wei_Comparison$GCAM_k,  fill = 'GCAM'), alpha = 0.5) +
xlab(expression(k~(y^-1))) + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Wei et al' = '#45912c', 'GCAM'='#e3962b')) +
theme_light()
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/PostKwon_Analysis.R")
ggplot() +
geom_histogram(aes(x = PostKwon_Comparison$Exp_k,fill ='Post & Kwon'), alpha = 0.5) +
geom_histogram(aes(x = PostKwon_Comparison$GCAM_k,  fill = 'GCAM'), alpha = 0.5) +
xlab(expression(k~(y^-1))) + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Post & Kwon' = '#3584B0', 'GCAM'='#e3962b')) +
theme_light()
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/PostKwon_Analysis.R")
ggplot() +
geom_histogram(aes(x = PostKwon_Comparison$Exp_k,fill ='Post & Kwon'), alpha = 0.5) +
geom_histogram(aes(x = PostKwon_Comparison$GCAM_k,  fill = 'GCAM'), alpha = 0.5) +
xlab(expression(k~(y^-1))) + ylab('Count') +
scale_fill_manual(name = "Data Source", values = c('Post & Kwon' = '#3584B0', 'GCAM'='#e3962b')) +
theme_light()
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Wei_Analysis.R")
ggplot() +
geom_histogram(aes(x = Full_Comparison$Exp_k, fill = Full_Comparison$source), alpha = 0.5, bins = 75) +
geom_histogram(aes(x = Full_Comparison$GCAM_k,  fill = 'GCAM'), alpha = 0.5, bins = 75) +
xlab(expression(k~(y^-1))) + ylab('Count') +
scale_fill_manual(name = "Data Source",
values = c('GCAM'='#e3962b', 'Wei et al' = '#45912c', 'Post & Kwon' = '#3584B0')) +
theme_light()
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Wei_Analysis.R")
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/PostKwon_Analysis.R")
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
dev.print(jpeg, 'Graphs/PostKwon_k_forest.jpeg')
dev.print(png, 'Graphs/PostKwon_k_forest.png')
dev.print(png, 'PostKwon_k_forest.png')
forest(
Full_effect_sizes_change$yi, Full_effect_sizes_change$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight         SMD [95% CI]'),
slab = Full_fixed_effect_results_change$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
forest(
Full_effect_sizes_change$yi, Full_effect_sizes_change$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight         SMD [95% CI]'),
slab = Full_fixed_effect_results_change$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
forest(
Full_effect_sizes$yi, Full_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Transition Type', 'Weight            SMD [95% CI]'),
slab = Full_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
forest(
Wei_effect_sizes$yi, Wei_effect_sizes$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight            SMD [95% CI]'),
slab = Wei_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
forest(
PostKwon_k_effect_sizes$yi, PostKwon_k_effect_sizes$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight            SMD [95% CI]'),
slab = PostKwon_k_fixed_effect_results$slab,
xlab = 'ln(Response Ratio)',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Forest plot for Post & Kwon k vals
forest(
PostKwon_k_effect_sizes$yi, PostKwon_k_effect_sizes$vi,
annotate = TRUE, showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = PostKwon_k_fixed_effect_results$slab,
xlab = 'ln(Response Ratio)',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
PostKwon_k_fixed_effect_results,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
size(PostKwon_Comparison)
length(PostKwon_Comparison)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Full_Analysis.R")
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
forest(
Full_effect_sizes_change$yi, Full_effect_sizes_change$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight         SMD [95% CI]'),
slab = Full_fixed_effect_results_change$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding column headers
#Adding the summary effect size
addpoly(
Full_fixed_effect_results_change,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Track_Transitions.R")
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity')
transitions_soon <- filter(transitions, year < 2015)
transitions_soon %>%
group_by(change) %>%
summarize(sum(sqkm_change)) %>%
rename(total_skqm_change = `sum(sqkm_change)`) %>%
arrange(desc(total_skqm_change))-> total_transitions_soon
#Plot in total for only transitions in the next 10ish years
ggplot(data = total_transitions_soon, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity')
View(filtered_transitions)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
View(Full_Comparison)
Full_comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei'))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei'))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(GCAM_region_ID = paste(GCAM_region_ID, source_short))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(GCAM_region_ID = paste(Basin_long_name, source_short))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(Basin_long_name = paste(Basin_long_name, source_short))
?str_detect
install.packages("stringr")
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(Basin_long_name = paste(Basin_long_name, source_short))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(basin_source = paste(Basin_long_name, source_short))
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(basin_source = paste(Basin_long_name, source_short)) %>%
filter((paste(Basin_long_name, 'PostKwon') %in% basin_source) & (paste(Basin_long_name, 'Wei') %in% basin_source))
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
Duplicate_Comparison %>%
group_by(basin_source) %>%
summarize(mean_control = mean(Exp_Rate), sd_control= sd(Exp_Rate), n_control = n(),
mean_GCAM = mean(GCAM_Rate), sd_GCAM = sd(GCAM_Rate), n_GCAM = n()
) -> Duplicate_MA_data
View(Duplicate_Comparison)
Duplicate_Comparison %>%
group_by(basin_source) %>%
summarize(mean_control = mean(Exp_k), sd_control= sd(Exp_k), n_control = n(),
mean_GCAM = mean(GCAM_k), sd_GCAM = sd(GCAM_k), n_GCAM = n()
) -> Duplicate_MA_data
#Now, we can use escalc to get the standardized mean difference
Duplicate_effect_sizes <-
escalc('SMD',
m1i = mean_control, n1i = n_control, sd1i = sd_control,
m2i = mean_GCAM, n2i = n_GCAM, sd2i = sd_GCAM,
data = Duplicate_MA_data
)
#We're going to use a fixed effect model for this analysis, which we set up below
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
data = Duplicate_effect_sizes)
Duplicate_fixed_effect_results
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
Duplicate_fixed_effect_sizes,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
#Forest plot for duplicates
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
Duplicate_effect_sizes,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
Duplicate_fixed_effect_results,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
count(Duplicate_Comparison, Basin_long_name)
count(Duplicate_Comparison, basin_source)
count(Duplicate_Comparison, basin_source)['Amazon PostKwon']
table(Duplicate_Comparison$basin_source)
table(Duplicate_Comparison$basin_source)['Amazon PostKown']
table(Duplicate_Comparison$basin_source)['Amazon PostKwon']
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(basin_source = paste(Basin_long_name, source_short)) %>%
filter((paste(Basin_long_name, 'PostKwon') %in% basin_source) & (paste(Basin_long_name, 'Wei') %in% basin_source)) %>%
filter(
table(Duplicate_Comparison$basin_source)[basin_source] > 1
) -> Duplicate_Comparison
View(Duplicate_Comparison)
#Meta analysis for the shared regions
#First, we need to get mean, std dev, and n
Duplicate_Comparison %>%
group_by(basin_source) %>%
summarize(mean_control = mean(Exp_k), sd_control= sd(Exp_k), n_control = n(),
mean_GCAM = mean(GCAM_k), sd_GCAM = sd(GCAM_k), n_GCAM = n()
) -> Duplicate_MA_data
#Now, we can use escalc to get the standardized mean difference
Duplicate_effect_sizes <-
escalc('SMD',
m1i = mean_control, n1i = n_control, sd1i = sd_control,
m2i = mean_GCAM, n2i = n_GCAM, sd2i = sd_GCAM,
data = Duplicate_MA_data
)
#We're going to use a fixed effect model for this analysis, which we set up below
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
data = Duplicate_effect_sizes)
#Forest plot for duplicates
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
Duplicate_fixed_effect_results,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
table(Duplicate_Comparison$basin_source)
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(basin_source = paste(Basin_long_name, source_short)) %>%
filter((paste(Basin_long_name, 'PostKwon') %in% basin_source) & (paste(Basin_long_name, 'Wei') %in% basin_source)) %>%
filter(
(table( (Duplicate_Comparison$basin_source)[paste(Basin_long_name, 'PostKwon')] > 1))
& (table(Duplicate_Comparison$basin_source)[paste(Basin_long_name, 'Wei')] > 1)
) -> Duplicate_Comparison
?table
?table()
table()?
v
table(Duplicate_Comparison$basin_source)
class(table(Duplicate_Comparison$basin_source))
counts = table(Duplicate_Comparison$basin_source)
counts['Amazon PostKwon']
counts['Amazon PostKwon'] > 2
Full_Comparison %>%
mutate(source_short = ifelse(source == 'Post & Kwon', 'PostKwon', 'Wei')) %>%
mutate(basin_source = paste(Basin_long_name, source_short)) %>%
filter((paste(Basin_long_name, 'PostKwon') %in% basin_source) & (paste(Basin_long_name, 'Wei') %in% basin_source)) %>%
filter(
(counts[paste(Basin_long_name, 'Wei')] > 1) & (counts[paste(Basin_long_name, 'PostKwon')] > 1)
) -> Duplicate_Comparison
#Meta analysis for the shared regions
#First, we need to get mean, std dev, and n
Duplicate_Comparison %>%
group_by(basin_source) %>%
summarize(mean_control = mean(Exp_k), sd_control= sd(Exp_k), n_control = n(),
mean_GCAM = mean(GCAM_k), sd_GCAM = sd(GCAM_k), n_GCAM = n()
) -> Duplicate_MA_data
#Now, we can use escalc to get the standardized mean difference
Duplicate_effect_sizes <-
escalc('SMD',
m1i = mean_control, n1i = n_control, sd1i = sd_control,
m2i = mean_GCAM, n2i = n_GCAM, sd2i = sd_GCAM,
data = Duplicate_MA_data
)
#We're going to use a fixed effect model for this analysis, which we set up below
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
data = Duplicate_effect_sizes)
#Forest plot for duplicates
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
#Adding the summary effect size
addpoly(
Duplicate_fixed_effect_results,
col = 'orange', cex = 1, annotate = TRUE, mlab = 'Summary'
)
Duplicate_fixed_effect_results
#Now, a meta analysis by transition type for the entire dataset
#First, we need to create a column in the merged data for transition type
Full_Comparison %>%
mutate(change = paste(Initial_Land_Use, Final_Land_Use, sep = '')) -> Full_Comparison_change
#First, we need to get mean, std dev, and n
PostKwon_Comparison %>%
group_by(Basin_long_name) %>%
summarize(mean_control = mean(Exp_Rate), sd_control= sd(Exp_Rate), n_control = n(),
mean_GCAM = mean(GCAM_Rate), sd_GCAM = sd(GCAM_Rate), n_GCAM = n()
) -> PostKwon_MA_data
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
View(Duplicate_effect_sizes)
View(Duplicate_Comparison)
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
mods = source,
data = Duplicate_effect_sizes)
View(Duplicate_MA_data)
Duplicate_Comparison %>%
group_by(basin_source) %>%
summarize(mean_control = mean(Exp_k), sd_control= sd(Exp_k), n_control = n(),
mean_GCAM = mean(GCAM_k), sd_GCAM = sd(GCAM_k), n_GCAM = n(),
source = source
) -> Duplicate_MA_data
View(Duplicate_MA_data)
Duplicate_effect_sizes <-
escalc('SMD',
m1i = mean_control, n1i = n_control, sd1i = sd_control,
m2i = mean_GCAM, n2i = n_GCAM, sd2i = sd_GCAM,
data = Duplicate_MA_data
)
View(Duplicate_effect_sizes)
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
mods = source,
data = Duplicate_effect_sizes)
Duplicate_fixed_effect_results <- rma(yi, vi, method = 'FE',
slab = basin_source,
mods = ~ source,
data = Duplicate_effect_sizes)
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
Duplicate_fixed_effect_results <- rma.mv(yi, vi, method = 'FE',
slab = basin_source,
mods =  source,
data = Duplicate_effect_sizes)
Duplicate_fixed_effect_results <- rma.mv(yi, vi, method = 'FE',
slab = basin_source,
mods = ~ source,
data = Duplicate_effect_sizes)
forest(
Duplicate_effect_sizes$yi, Duplicate_effect_sizes$vi,
annotate = TRUE,showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = Duplicate_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
Duplicate_fixed_effect_results
Full_fixed_effect_results_change
Wei_fixed_effect_results
View(PostKwon_k_fixed_effect_results)
PostKwon_k_fixed_effect_results
forest(
Full_effect_sizes_change$yi, Full_effect_sizes_change$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight         SMD [95% CI]'),
slab = Full_fixed_effect_results_change$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Track_Transitions.R")
View(transitions)
unique(transitions$chnage)
unique(transitions$change)
unique(transitions$Initial_Land_use)
unique(transitions$Initial_Land_Use)
unique(transitions$from)
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity')
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Track_Transitions.R")
#Plot in total
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
#Plot in total
ggplot(data = total_transitions, aes(x = total_skqm_change, y = change)) +
geom_bar(stat='identity') +
xlab(expression(Total~area~transitioned~(km^2))) + ylab('Transition Type') +
theme_light()
ggsave('total_transitions_bar.jpeg', path = 'Graphs')
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
forest(
Full_effect_sizes_change$yi, Full_effect_sizes_change$vi,
annotate = TRUE, showweights = TRUE,
header = c('Transition Type', 'Weight         SMD [95% CI]'),
slab = Full_fixed_effect_results_change$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
forest(
PostKwon_k_effect_sizes$yi, PostKwon_k_effect_sizes$vi,
annotate = TRUE, showweights = TRUE,
header = c('Region', 'Weight            SMD [95% CI]'),
slab = PostKwon_k_fixed_effect_results$slab,
xlab = 'Standardized Mean Difference',
#Below sets the size of study labels, shape of bars, and size of x labels
cex = .8, pch = 15, cex.lab = 1
)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Meta_Analysis.R")
