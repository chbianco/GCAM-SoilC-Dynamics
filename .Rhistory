numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(31, 'Oranges'));
reds = getcol(31)[1:30];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Reds'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
getcol = colorRampPalette(brewer.pal(6, 'Greens'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'GnBu'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 16, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 20, height = 20,
numeric2Cat_list = numeric2Cat_list,
)
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 50, height = 20,
numeric2Cat_list = numeric2Cat_list,
)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
#Creating the map
rmap::map(location_freq_data,
overLayer = mapGCAMBasins,
width = 50, height = 16,
numeric2Cat_list = numeric2Cat_list,
)
write.csv(location_freq_data,location_freq_data.csv", row.names = FALSE)
write.csv(location_freq_data,"location_freq_data.csv", row.names = FALSE)
write.csv(location_freq_data,"location_freq_data.csv", row.names = FALSE)
source("C:/Users/bian240/OneDrive - PNNL/Desktop/Initial Project Code/GCAM-SoilC-Dynamics/Rmap_experimental_location.R")
View(location_freq_data)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
)
right_join(simple_soilC_regions, by = c('GLU_code', 'Land_Type', 'GCAM_region_ID')) %>%
rename(final_soil_c = soil_c) %>%
select(-Land_Type, -soilTimeScale.x, -Basin_long_name.x) %>%
rename(soilTimeScale = soilTimeScale.y, Basin_long_name = Basin_long_name.y) %>
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = GCAMcountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(5)[1:4];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(5, 'Oranges'));
reds = getcol(5)[1:4];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds),"white"))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -0.0000000000001, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c("0", '1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-0, -1 , -4, -10, -20, -30))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-30, -20, -10, -4, -1, 0))
numeric2Cat_labels <- list(c('1', "1 to 4", "4 to 10", "10 to 20", "20 to 30"))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c(-30, -20, -10, -4, -1, 0))
numeric2Cat_labels <- list(c("20 to 30", "10 to 20", "4 to 10", "1 to 4", '1'))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Making the map look pretty
# Build your palette
getcol = colorRampPalette(brewer.pal(6, 'Oranges'));
reds = getcol(6)[1:5];
my_pal <- rev(c(rev(reds)))
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
# Create a list of ranges and categorical color scales for each parameter
numeric2Cat_param <- list("param")
numeric2Cat_breaks <- list(c( 0, -1, -4, -10, -20, -30))
numeric2Cat_labels <- list(c("20 to 30", "10 to 20", "4 to 10", "1 to 4", '1'))
names(my_pal) <- unlist(numeric2Cat_labels)
pie(rep(1,length(my_pal)),label=names(my_pal),col=my_pal)
numeric2Cat_palette <- list(my_pal) # Can be a custom scale or an R brewer palette or an rmap palette
numeric2Cat_legendTextSize <- list(c(1))
numeric2Cat_list <-list(numeric2Cat_param = numeric2Cat_param,
numeric2Cat_breaks = numeric2Cat_breaks,
numeric2Cat_labels = numeric2Cat_labels,
numeric2Cat_palette = numeric2Cat_palette,
numeric2Cat_legendTextSize = numeric2Cat_legendTextSize); numeric2Cat_list
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Creating the map
rmap::map(location_freq_data,
#numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
#Creating the map
rmap::map(location_freq_data,
numeric2Cat_list = numeric2Cat_list,
underLayer = mapCountries
)
